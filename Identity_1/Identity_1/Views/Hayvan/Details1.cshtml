@using Identity_1.Models
@model Identity_1.Models.HayvanDetailsViewModel
@inject MyData.Repository.Ihelper<MyClass.Hayvan> hayvan
@inject MyData.Repository.Ihelper<MyClass.Tur> tur
@inject MyData.Repository.Ihelper<MyClass.Cins> cins
@inject MyData.Repository.Ihelper<MyClass.Asi> asi
@inject MyData.Repository.Ihelper<MyClass.Bakim> bakim

<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>@Model.Hayvan.Isim</h4>
                    <div class="breadcrumb__links">
                        <a href="/Home/Index">Hayvanlar</a>
                        <span>@Model.Hayvan.Isim</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<hr />
<div class="container">
    <div class="row">
        <div class="col-md-5">
            <div class="card">
                <div class="row">
                    <div class="col-md-7 container" style=" display: flex; flex-direction: column; align-items: flex-start ;">
                        <br />
                        <div class="thumbnails" style="display: flex; flex-direction: row; margin-bottom: 5px;">
                            <img src="~/img/hayvan/@Model.Hayvan.Resim1" class="active" style="width: 63px; border-radius:5%; margin: 2.5px; opacity: 1; cursor: pointer;" onclick="changeImage(0)">
                            <img src="~/img/hayvan/@Model.Hayvan.Resim2" style="width: 63px; margin: 2.5px; border-radius:5%; opacity: 0.5; cursor: pointer;" onclick="changeImage(1)">
                            <img src="~/img/hayvan/@Model.Hayvan.Resim3" style="width: 63px; margin: 2.5px; border-radius:5%; opacity: 0.5; cursor: pointer;" onclick="changeImage(2)">
                        </div>
                        <div class="main-image" style="position: relative; width: 200px; height: 180px; border-radius:7%">
                            <div class="nav left" onclick="prevImage()" style="position: absolute; top: 50%; transform: translateY(-50%); background: rgba(0,0,0,0.0); color: white; font-size: 1em; cursor: pointer; padding: 5px; left: 0;">&#10094;</div>
                            <img src="~/img/hayvan/@Model.Hayvan.Resim1" id="mainImage" style="width: 100%; height: 100%; object-fit: cover;">
                            <div class="nav right" onclick="nextImage()" style="position: absolute; top: 50%; transform: translateY(-50%); background: rgba(0,0,0,0.0); color: white; font-size: 1em; cursor: pointer; padding: 5px; right: 0;">&#10095;</div>
                        </div>
                    </div>






                    <div class="col-md-5 card-body" style="float: left; display: flex; flex-direction: column; align-items: flex-start ;">

                        <br />
                        <h4 class="card-text"> @Model.Hayvan.Isim </h4>
                        <br />
                        <p class="card-text">Tür : @Model.Hayvan.Tur.Isim </p>
                        <p class="card-text">Cins : @Model.Hayvan.Cins.Isim </p>
                        <p class="card-text">Yaş : @Model.Hayvan.Yas?.ToString() </p>
                        <p class="card-text">Cinsiyet : @Model.Hayvan.Cinsiyet</p>

                    </div>
                </div>
                <div class="card-body">
                    <p class="card-text">Doğum Tarihi : @Model.Hayvan.DogumTarihi?.ToString("dd.MM.yyyy") </p>
                    <p class="card-text">
                        Ölüm Tarihi :
                        @(Model.Hayvan.OlumTarihi?.ToString("dd.MM.yyyy") == "01.01.0001" ? "-" : Model.Hayvan.OlumTarihi?.ToString("dd.MM.yyyy"))
                    </p>

                </div>               
            </div>
        </div>
        <div class="col-md-7">
            <h3 class="soy">@Model.Hayvan.Isim 'nın soy ağacı </h3>
            <div class="tree">
                @Html.Partial("_RecursiveTree1", new RecursiveTreeViewModel { Hayvan = Model.Hayvan, HayvanController = (Identity_1.MyController.HayvanController)ViewData["HayvanController"] })
            </div>
        </div>
    </div>
</div>

<script>
    let currentImageIndex = 0;
    const thumbnails = document.querySelectorAll('.thumbnails img');
    const mainImage = document.getElementById('mainImage');

    function updateThumbnails() {
        thumbnails.forEach((img, index) => {
            img.style.opacity = index === currentImageIndex ? '1' : '0.5';
        });
    }

    function changeImage(index) {
        currentImageIndex = index;
        mainImage.src = thumbnails[index].src;
        updateThumbnails();
    }

    function prevImage() {
        currentImageIndex = (currentImageIndex - 1 + thumbnails.length) % thumbnails.length;
        changeImage(currentImageIndex);
    }

    function nextImage() {
        currentImageIndex = (currentImageIndex + 1) % thumbnails.length;
        changeImage(currentImageIndex);
    }

    updateThumbnails();
</script>


<style>


    .tree ul {
        padding-top: 20px;
        position: relative;
        transition: all 0.5s;
    }

    .tree li {
        float: left;
        text-align: center;
        list-style-type: none;
        position: relative;
        padding: 20px 5px 0 5px;
        transition: all 0.5s;
    }

        .tree li::before, .tree li::after {
            content: '';
            position: absolute;
            top: 0;
            right: 50%;
            border-top: 2px solid #ccc;
            width: 50%;
            height: 20px;
        }

        .tree li::after {
            right: auto;
            left: 50%;
            border-left: 2px solid #ccc;
        }

        .tree li:only-child::after, .tree li:only-child::before {
            display: none;
        }

        .tree li:only-child {
            padding-top: 0;
        }

        .tree li:first-child::before, .tree li:last-child::after {
            border: 0 none;
        }

        .tree li:last-child::before {
            border-right: 2px solid #ccc;
            border-radius: 0 5px 0 0;
        }

        .tree li:first-child::after {
            border-radius: 5px 0 0 0;
        }

    .tree ul ul::before {
        content: '';
        position: absolute;
        top: 0;
        left: 50%;
        border-left: 2px solid #ccc;
        width: 0;
        height: 20px;
    }

    .tree li a {
        border: 2px solid #ccc;
        padding: 5px 10px;
        text-decoration: none;
        color: #666;
        font-family: arial, verdana, tahoma;
        font-size: 11px;
        display: inline-block;
        border-radius: 5px;
        transition: all 0.5s;
    }

        .tree li a:hover, .tree li a:hover + ul li a {
            background: #c8e4f8;
            color: #000;
            border: 2px solid #94a0b4;
        }

            .tree li a:hover + ul li::after,
            .tree li a:hover + ul li::before,
            .tree li a:hover + ul::before,
            .tree li a:hover + ul ul::before {
                border-color: #94a0b4;
            }
</style>


